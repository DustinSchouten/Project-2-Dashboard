<%- include('./partials/head') %>
<p style='display:none' class="data"><%= JSON.stringify(data) %></p>
<h1>Minor Web: Project-2 Dashboard</h1>
<section class="charts_section">
    <section class="chart">
        <h2>Total sizes:</h2>
        <div id="total_sizes_chart"></div>
    </section>
    <section class="chart">
        <h2>Total languages:</h2>
        <div id="total_languages_count_chart"></div>
    </section>
</section>

<script>
    function sortArrayByValue(dataArray) {
        var array = Object.keys(dataArray).map(function(value) {
            return [value, dataArray[value]];
        });
        array.sort(function(first, second) {
            return second[1] - first[1];
        });
        dataArraySorted = {}
        array.forEach((value,idx) => {
            dataArraySorted[value[0]] = value[1]
        })
        return dataArraySorted
    }

    function generateBarChart(data,chart_name) {
        let margin = {top: 20, right: 20, bottom: 30, left: 130};
        let svgWidth = 620, svgHeight = 400;
        let height = svgHeight- margin.top- margin.bottom, width = svgWidth - margin.left - margin.right;
        let sourceNames = [], sourceCount = [];

        let x = d3.scaleLinear().rangeRound([0, width]),
            y = d3.scaleBand().rangeRound([0, height]).padding(0.1);
            for(let key in data){
                if(data.hasOwnProperty(key)){
                    sourceNames.push(key);
                    sourceCount.push(parseInt(data[key]));
                }
            }
            x.domain([0, d3.max(sourceCount, function(d) { return d; })]);
            y.domain(sourceNames);

            let svg = d3.select("#"+chart_name).append("svg");
            svg.attr('height', svgHeight)
            .attr('width', svgWidth+35);

            svg = svg.append("g")
                    .attr("transform", "translate(" + margin.left + "," + margin.top + ")")

            svg.append("g")
                .attr("transform", "translate(0, " + height + ")")
                .call(d3.axisBottom(x))

            svg.append("g")
                .call(d3.axisLeft(y))

                    
            // Create rectangles
            let bars = svg.selectAll('.bar')
                .data(sourceNames)
                .enter()
                .append("g")

            bars.append('rect')
                .attr('class', 'bar')
                .attr("x", function(d) { return 1; })
                .attr("y", function(d) { return y(d); })
                .attr("width", function(d){return x(data[d])})
                .attr("height", function(d) { return y.bandwidth(); })

            bars.append("text")
                .text(function(d) { 
                    return data[d];
                })
                .attr("x", function(d){
                    return x(data[d]) + 5;
                })
                .attr("y", function(d){
                    return y(d)+svgHeight/25;
                })
                .attr('class', 'value_labels')
    }

    const data = JSON.parse(document.querySelector('.data').textContent);
    const forked_nodes = data['repository']['forks']['nodes']
    console.log(forked_nodes)
    var dataArrayTotalSizes = {}
    var dataArrayTotalLanguagesCount = {}
    for(var i=0; i<forked_nodes.length; i++) {
        const name = forked_nodes[i]['owner']['login'];
        const totalsize = forked_nodes[i]['languages']['totalSize'];
        const totalDifferentLanguages = forked_nodes[i]['languages']['totalCount'];
        dataArrayTotalSizes[name] = totalsize;
        dataArrayTotalLanguagesCount[name] = totalDifferentLanguages
    }
    
    generateBarChart(sortArrayByValue(dataArrayTotalSizes),'total_sizes_chart')
    generateBarChart(sortArrayByValue(dataArrayTotalLanguagesCount),'total_languages_count_chart')

</script>
<%- include('./partials/foot') %>
